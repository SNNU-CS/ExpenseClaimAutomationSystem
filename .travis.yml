language: python
sudo: true
services:
  - postgresql
  - docker
cache:
  - pip
  - yarn
install:
  - pip install -r wangwang/requirements.txt
  - pip install -r wangwang/dev-requirements.txt
  - pip freeze

jobs:
  include:
    - stage: test
      name: "Code style"
      python: 3.6
      script:
        - cd wangwang && make check
    - stage: test
      name: "Unit test"
      python: 3.6
      script:
        - psql -c 'create database test;' -U postgres
        - cd wangwang
        - make makemigrations
        - make migrate
        - make test
      env:
        - ENV=test
    - stage: build
      name: "Build backend"
      python: 3.6
      script:
        - cd wangwang
        - COMMIT_ID=$(git rev-parse --short HEAD)
        - docker build -t wangwang .
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker images
        - docker tag wangwang $DOCKER_USERNAME/wangwang:$COMMIT_ID
        - docker push $DOCKER_USERNAME/wangwang:$COMMIT_ID
        - docker tag wangwang $DOCKER_USERNAME/wangwang:latest
        - docker push $DOCKER_USERNAME/wangwang:latest
        - echo "Build Success!"
      env:
        - DOCKER_USERNAME=zhaoqi99
    - stage: build
      name: "Build frontend"
      script:
        - cd miaomiao
        - COMMIT_ID=$(git rev-parse --short HEAD)
        - docker build -t miaomiao .
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker images
        - docker tag miaomiao $DOCKER_USERNAME/miaomiao:$COMMIT_ID
        - docker push $DOCKER_USERNAME/miaomiao:$COMMIT_ID
        - docker tag miaomiao $DOCKER_USERNAME/miaomiao:latest
        - docker push $DOCKER_USERNAME/miaomiao:latest
        - echo "Build Success!"
      env:
        - DOCKER_USERNAME=zhaoqi99
    - stage: deploy
      name: "Deploy backend"
      install: skip
      script:
        - COMMIT_ID=$(git rev-parse --short HEAD)
        - sudo apt-get install sshpass -y
        - export SSHPASS=$SERVER_PASSWOED
        - sshpass -e ssh root@$PRO_IP -o stricthostkeychecking=no 'docker pull zhaoqi99/miaomiao:latest && docker stop miaomiao && docker rm miaomiao && docker run --name=miaomiao  -p 80:80 --net=host --restart=always zhaoqi99/miaomiao:latest && exit'
        - echo "Deploy Success!" 
    - stage: deploy
      name: "Deploy frontend"
      install: skip
      script:
        - echo "Deploy Success!"
stages:
  - test  
  - build
  - name: deploy
    if: branch = master    
        